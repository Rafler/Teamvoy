{"version":3,"sources":["components/PokemonsDetails/PokemonDetails.js","components/Card/Card.js","components/Cards/Cards.js","components/Header/Header.js","components/Header/index.js","components/App/App.js","api/data.js","store/actionTypes.js","store/loadData.js","store/actionCreators.js","components/App/index.js","store/reducer.js","store/index.js","index.js"],"names":["PokemonDetails","_ref","currentPokemon","setCurrentPokemon","react_default","a","createElement","className","onClick","src","info","sprites","front_shiny","alt","concat","name","id","types","map","el","type","stats","base_stat","weight","moves","length","Card","pokemon","key","Cards","pokemonsArr","loadMoreData","every","components_Card_Card","Header","updatePokemons","pokemons","active","_useState","useState","_useState2","Object","slicedToArray","currentType","setCurrentType","useEffect","filter","some","Fragment","value","onChange","_ref2","target","disabled","Enhanced","connect","state","App","loadData","loadMore","loadTypes","_useState3","_useState4","setActive","_useState5","_useState6","activeTimeout","setTimeout","toConsumableArray","Dimmer","inverted","Loader","content","components_Cards_Cards","components_PokemonsDetails_PokemonDetails","getData","url","arguments","undefined","fetch","then","response","json","ACTION_TYPES","GET_POKEMONS","GET_POKEMONS_INFO","GET_POKEMONS_TYPES","link","dispatch","loadInfo","pokemonInfo","initialState","store","createStore","action","results","_objectSpread","next","applyMiddleware","thunk","ReactDOM","render","es","App_Enhanced","document","getElementById"],"mappings":"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","file":"static/js/main.442aee2d.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./PokemonDetails.scss\";\n\nconst PokemonDetails = ({ currentPokemon, setCurrentPokemon }) => (\n  <div className=\"right-block\" onClick={() => setCurrentPokemon({})}>\n    <div className=\"pokemon-details\">\n      <img src={currentPokemon.info.sprites.front_shiny} alt=\"pokemon\" />\n      <h1 className=\"title\">{`${currentPokemon.name} #${currentPokemon.info.id}`}</h1>\n      <table className=\"ui compact table\">\n        <tbody>\n          <tr>\n            <td>Type</td>\n            <td>{currentPokemon.info.types.map(el => el.type.name + \" \")}</td>\n          </tr>\n          <tr>\n            <td>Attack</td>\n            <td>{currentPokemon.info.stats[4].base_stat}</td>\n          </tr>\n          <tr>\n            <td>Defense</td>\n            <td>{currentPokemon.info.stats[3].base_stat}</td>\n          </tr>\n          <tr>\n            <td>HP</td>\n            <td>{currentPokemon.info.stats[5].base_stat}</td>\n          </tr>\n          <tr>\n            <td>SP Attack</td>\n            <td>{currentPokemon.info.stats[2].base_stat}</td>\n          </tr>\n          <tr>\n            <td>SP Defense</td>\n            <td>{currentPokemon.info.stats[1].base_stat}</td>\n          </tr>\n          <tr>\n            <td>Speed</td>\n            <td>{currentPokemon.info.stats[0].base_stat}</td>\n          </tr>\n          <tr>\n            <td>Weight</td>\n            <td>{currentPokemon.info.weight}</td>\n          </tr>\n          <tr>\n            <td>Total moves</td>\n            <td>{currentPokemon.info.moves.length}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n);\n\nexport default PokemonDetails;\n","import React from \"react\";\n\nconst Card = ({ pokemon, setCurrentPokemon }) => {\n  return (\n    <div className=\"card\" onClick={() => setCurrentPokemon(pokemon)}>\n      <img src={pokemon.info.sprites.front_shiny} alt=\"pokemon\" />\n      <div className=\"content\">\n        <h1 className=\"header\">{pokemon.name}</h1>\n        {pokemon.info.types.map(type => (\n          <span key={type.type.name} className={`type ${type.type.name}`}>\n            {type.type.name}\n          </span>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\n\nimport Card from \"../Card/Card\";\n\nimport \"./Cards.scss\";\n\nconst Cards = ({ pokemonsArr, setCurrentPokemon, loadMoreData }) => {\n  return (\n    <div className=\"left-block\">\n      <div className=\"ui link cards\">\n        {pokemonsArr.every(pokemon => pokemon.info) &&\n          pokemonsArr.map(pokemon => (\n            <Card\n              setCurrentPokemon={setCurrentPokemon}\n              pokemon={pokemon}\n              key={pokemon.name}\n            />\n          ))}\n      </div>\n      <button onClick={loadMoreData} className=\"ui primary button\">\n        Load More\n      </button>\n    </div>\n  );\n};\n\nexport default Cards;\n","import React, { useEffect, useState } from \"react\";\n\nimport \"./Header.scss\";\n\nconst Header = ({\n  types,\n  updatePokemons,\n  pokemons,\n  setCurrentPokemon,\n  active\n}) => {\n  const [currentType, setCurrentType] = useState(\"\");\n  useEffect(() => {\n    if (currentType) {\n      updatePokemons(\n        pokemons.filter(pokemon =>\n          pokemon.info.types.some(type => type.type.name === currentType)\n        )\n      );\n    } else {\n      updatePokemons(pokemons);\n    }\n    setCurrentPokemon({});\n  }, [currentType, pokemons, setCurrentPokemon, updatePokemons]);\n  useEffect(() => {\n    setCurrentType(\"\");\n  }, [active]);\n  return (\n    <>\n      <h1 className=\"header\">POKEDEX</h1>\n      <div className=\"filter-menu\">\n        <select\n          value={currentType}\n          onChange={({ target }) => setCurrentType(target.value)}\n          className=\"ui selection dropdown\"\n        >\n          <option value=\"\" disabled>\n            Choose your type:\n          </option>\n          {types.map(type => (\n            <option value={type.name} key={type.name}>\n              {type.name}\n            </option>\n          ))}\n        </select>\n        <button\n          type=\"reset\"\n          className=\"negative ui button\"\n          onClick={() => setCurrentType(\"\")}\n        >\n          Reset\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default Header;\n","import { connect } from \"react-redux\";\n\nimport Header from \"./Header\";\n\nfunction mapState2Props(state) {\n  return {\n    pokemons: state.pokemons,\n    types: state.types\n  };\n}\nconst Enhanced = connect(mapState2Props)(Header);\n\nexport { Enhanced as Header };\n","import React, { useState, useEffect } from \"react\";\nimport { Dimmer, Loader } from \"semantic-ui-react\";\n\nimport PokemonDetails from \"../PokemonsDetails/PokemonDetails\";\nimport Cards from \"../Cards/Cards\";\nimport { Header } from \"../Header/\";\n\nimport \"./App.scss\";\n\nconst App = ({ loadData, pokemons, loadMore, loadTypes}) => {\n  const [currentPokemon, setCurrentPokemon] = useState({});\n  const [active, setActive] = useState(false);\n  const [pokemonsArr, updatePokemons] = useState([]);\n  function activeTimeout() {\n    setActive(true);\n    setTimeout(() => setActive(false), 2000);\n  }\n  function loadMoreData() {\n    activeTimeout();\n    setCurrentPokemon({});\n    loadData(loadMore);\n  }\n  useEffect(() => {\n    activeTimeout();\n    loadData();\n    loadTypes();\n  }, [loadData, loadTypes]);\n\n  useEffect(() => {\n    updatePokemons([...pokemons]);\n  }, [pokemons]);\n\n  return (\n    <>\n      <Dimmer active={active} inverted>\n        <Loader inverted content=\"Loading\" />\n      </Dimmer>\n      <Header\n        updatePokemons={updatePokemons}\n        setCurrentPokemon={setCurrentPokemon}\n        active={active}\n      />\n      <main className=\"main-block\">\n        <Cards\n          pokemonsArr={pokemonsArr}\n          setCurrentPokemon={setCurrentPokemon}\n          loadMoreData={loadMoreData}\n        />\n        {currentPokemon.info && (\n          <PokemonDetails\n            currentPokemon={currentPokemon}\n            setCurrentPokemon={setCurrentPokemon}\n          />\n        )}\n      </main>\n    </>\n  );\n};\nexport default App;\n","const BASE_URL = 'https://pokeapi.co/api/v2/pokemon/?limit=12';\nexport const getData = (url=BASE_URL) => fetch(`${url}`).then(response => response.json());\n","export const ACTION_TYPES = {\n  GET_POKEMONS: \"GET_POKEMONS\",\n  GET_POKEMONS_INFO: \"GET_POKEMONS_INFO\",\n  GET_POKEMONS_TYPES: \"GET_POKEMONS_TYPES\"\n};\n","import { getData } from \"../api/data\";\nimport {\n  getPreparedPokemonsData,\n  getPreparedPokemonsInfo,\n  getPreparedPokemonsTypes\n} from \"./actionCreators\";\n\nexport const loadData = link => dispatch => {\n  getData(link).then(response => {\n    dispatch(getPreparedPokemonsData(response));\n  });\n};\n\nexport const loadInfo = link => dispatch => {\n  getData(link).then(response => {\n    dispatch(getPreparedPokemonsInfo(response));\n  });\n};\n\nexport const loadTypes = () => dispatch => {\n  getData(\"https://pokeapi.co/api/v2/type/?limit=999\").then(response => {\n    dispatch(getPreparedPokemonsTypes(response));\n  });\n};\n","import { ACTION_TYPES } from \"./actionTypes\";\n\nexport const getPreparedPokemonsTypes = types => ({\n  type: ACTION_TYPES.GET_POKEMONS_TYPES,\n  types\n});\n\nexport const getPreparedPokemonsData = pokemons => ({\n  type: ACTION_TYPES.GET_POKEMONS,\n  pokemons\n});\n\nexport const getPreparedPokemonsInfo = pokemonInfo => ({\n  type: ACTION_TYPES.GET_POKEMONS_INFO,\n  pokemonInfo\n});\n","import { connect } from \"react-redux\";\nimport App from \"./App\";\nimport { loadData, loadTypes } from \"../../store/loadData\";\n\nconst mapDispatch2Props = dispatch => ({\n  loadData: link => dispatch(loadData(link)),\n  loadTypes: () => dispatch(loadTypes())\n});\n\nfunction mapState2Props(state) {\n  return {\n    pokemons: state.pokemons,\n    loadMore: state.loadMore,\n  };\n}\nconst Enhanced = connect(\n  mapState2Props,\n  mapDispatch2Props\n)(App);\n\nexport { Enhanced as App };\n","import { store } from \"./index\";\nimport { ACTION_TYPES } from \"./actionTypes\";\nimport { loadInfo } from \"./loadData\";\n\nconst initialState = {\n  pokemons: [],\n  types: []\n};\n\nexport function reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case ACTION_TYPES.GET_POKEMONS: {\n      action.pokemons.results.map(pokemon =>\n        loadInfo(pokemon.url)(store.dispatch)\n      );\n      return {\n        ...state,\n        pokemons: [...state.pokemons, ...action.pokemons.results],\n        loadMore: action.pokemons.next\n      };\n    }\n    case ACTION_TYPES.GET_POKEMONS_INFO: {\n      return {\n        ...state,\n        pokemons: state.pokemons.map(pokemon => {\n          if (pokemon.name === action.pokemonInfo.name) {\n            return {\n              ...pokemon,\n              info: action.pokemonInfo\n            };\n          } else {\n            return pokemon;\n          }\n        })\n      };\n    }\n    case ACTION_TYPES.GET_POKEMONS_TYPES: {\n      return {\n        ...state,\n        types: action.types.results\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { reducer } from \"./reducer\";\n\nexport const store = createStore(reducer, applyMiddleware(thunk));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { App } from './components/App';\n\nimport { store } from './store/index';\n\nReactDOM.render(\n<Provider store={store}>\n    <App />\n    </Provider>,\ndocument.getElementById('root')\n);\n"],"sourceRoot":""}