{"version":3,"sources":["components/App/App.js","api/data.js","store/index.js","components/App/index.js","index.js"],"names":["App","_ref","loadData","pokemons","loadMore","react_default","a","createElement","onClick","map","pokemon","key","name","getData","url","arguments","length","undefined","fetch","concat","then","response","json","ACTION_TYPES","GET_POKEMONS","GET_POKEMONS_INFO","link","dispatch","type","loadInfo","pokemonInfo","infoArr","push","pokemonsInfo","getPreparedPokemonsInfo","initialState","store","createStore","state","action","console","log","results","_objectSpread","next","applyMiddleware","thunk","Enhanced","connect","ReactDOM","render","es","document","getElementById"],"mappings":"+KAaeA,EAXH,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,SAAUC,EAAZF,EAAYE,SAAUC,EAAtBH,EAAsBG,SAAtB,OACJC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQC,QAAS,kBAAMN,MAAvB,QACCC,GAAYA,EAASM,IAAI,SAAAC,GAAO,OAC7BL,EAAAC,EAAAC,cAAA,OAAKI,IAAKD,EAAQE,MAAOF,EAAQE,QAEtCP,EAAAC,EAAAC,cAAA,UAAQC,QAAS,kBAAMN,EAASE,KAAhC,sCCPES,EAAU,eAACC,EAADC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADN,8CACM,OAAkBG,MAAK,GAAAC,OAAIL,IAAOM,KAAK,SAAAC,GAAQ,OAAIA,EAASC,6jBCGnF,IAAMC,EAAe,CACjBC,aAAc,eACdC,kBAAmB,qBAgBVvB,EAAW,SAACwB,GAAD,OAAU,SAAAC,GAC9Bd,EAAQa,GACHN,KAAK,SAAAC,GAfkB,IAAAlB,EAgBpBwB,GAhBoBxB,EAgBakB,EAhBA,CACzCO,KAAML,EAAaC,aACnBrB,kBAkBS0B,EAAW,SAACH,GAAD,OAAU,SAAAC,GAC9Bd,EAAQa,GACHN,KAAK,SAAAC,GACFM,EAlBoB,SAAAG,GAC5B,IAAIC,EAAU,GAEd,OADAA,EAAQC,KAAKF,GACN,CACPF,KAAML,EAAaE,kBACnBQ,aAAcF,GAaGG,CAAwBb,QAGvCc,EAAe,CACjBhC,SAAS,GACT8B,aAAc,IA0BX,IAAMG,EAAQC,YAvBrB,WAAoD,IAAnCC,EAAmCvB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA3BoB,EAAcI,EAAaxB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GAC5C,OAAQwB,EAAOX,MACX,KAAKL,EAAaC,aAEd,OADAgB,QAAQC,IAAIF,EAAOpC,SAASuC,QAAQjC,IAAI,SAAAC,GAAO,OAAImB,EAASnB,EAAQI,IAAjBe,MACnDc,EAAA,GACOL,EADP,CAEInC,SAAUoC,EAAOpC,SAASuC,QAC1BtC,SAAUmC,EAAOpC,SAASyC,OAGlC,KAAKrB,EAAaE,kBAEd,OADAe,QAAQC,IAAIF,EAAON,cACnBU,EAAA,GACOL,EADP,CAEIL,aAAcM,EAAON,eAG7B,QACI,OAAOK,IAKuBO,YAAgBC,MChD1D,IAAMC,EAAWC,YAPjB,SAAwBV,GACpB,MAAO,CACHnC,SAAUmC,EAAMnC,SAChBC,SAAUkC,EAAMlC,WAPE,SAAAuB,GAAQ,MAAK,CACnCzB,SAAU,SAACwB,GAAD,OAAUC,EAASzB,EAASwB,OAUzBsB,CAGfhD,GCXFiD,IAASC,OACT7C,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAUf,MAAOA,GACb/B,EAAAC,EAAAC,cAACwC,EAAD,OAEJK,SAASC,eAAe","file":"static/js/main.e3d5fd03.chunk.js","sourcesContent":["import React from 'react';\n\nconst App = ({loadData, pokemons, loadMore}) => (\n        <div>\n            <button onClick={() => loadData()}>Load</button>\n            {pokemons && pokemons.map(pokemon =>(\n                <div key={pokemon.name}>{pokemon.name}</div>\n            ))}\n           <button onClick={() => loadData(loadMore)}>Load More</button>\n        </div>\n    );\n;\n\nexport default App;\n","const BASE_URL = 'https://pokeapi.co/api/v2/pokemon/?limit=12';\nexport const getData = (url=BASE_URL) => fetch(`${url}`).then(response => response.json());\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { getData } from '../api/data';\n\nconst ACTION_TYPES = {\n    GET_POKEMONS: 'GET_POKEMONS',\n    GET_POKEMONS_INFO: 'GET_POKEMONS_INFO'\n};\n\nconst getPreparedPokemonsData = pokemons => ({\n    type: ACTION_TYPES.GET_POKEMONS,\n    pokemons,\n});\n\nconst getPreparedPokemonsInfo = pokemonInfo => {\n    let infoArr = [];\n    infoArr.push(pokemonInfo);\n    return {\n    type: ACTION_TYPES.GET_POKEMONS_INFO,\n    pokemonsInfo: infoArr,\n}};\n\nexport const loadData = (link) => dispatch =>{\n    getData(link)\n        .then(response => {\n            dispatch(getPreparedPokemonsData(response));\n        })\n};\n\nexport const loadInfo = (link) => dispatch =>{\n    getData(link)\n        .then(response => {\n            dispatch(getPreparedPokemonsInfo(response));\n        })\n};\nconst initialState = {\n    pokemons:[],\n    pokemonsInfo: [],\n};\n\nfunction reducer(state = initialState, action = {}) {\n    switch (action.type) {\n        case ACTION_TYPES.GET_POKEMONS: {\n            console.log(action.pokemons.results.map(pokemon => loadInfo(pokemon.url)()));\n            return {\n                ...state,\n                pokemons: action.pokemons.results,\n                loadMore: action.pokemons.next,\n            };\n        }\n        case ACTION_TYPES.GET_POKEMONS_INFO: {\n            console.log(action.pokemonsInfo)\n            return {\n                ...state,\n                pokemonsInfo: action.pokemonsInfo,\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\nexport const store = createStore(reducer, applyMiddleware(thunk));\n","import { connect } from 'react-redux';\nimport App from './App';\nimport {loadData} from \"../../store\";\n\nconst mapDispatch2Props = dispatch => ({\n    loadData: (link) => dispatch(loadData(link)),\n});\n\nfunction mapState2Props(state) {\n    return {\n        pokemons: state.pokemons,\n        loadMore: state.loadMore\n    };\n};\n\nconst Enhanced = connect(\n    mapState2Props,\n    mapDispatch2Props,\n)(App);\n\nexport {\n    Enhanced as App,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { App } from './components/App';\n\nimport { store } from './store/index';\n\nReactDOM.render(\n<Provider store={store}>\n    <App />\n    </Provider>,\ndocument.getElementById('root')\n);\n"],"sourceRoot":""}